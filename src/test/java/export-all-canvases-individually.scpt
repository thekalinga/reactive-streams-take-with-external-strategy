on convertGraffleFile(canvasName, outputFile)
  tell application "OmniGraffle"
    export front document scope canvasName as "SVG" to file outputFile
    close front document
  end tell
end convertGraffleFile

on replace_text(this_text, search_string, replacement_string)
  set prevTIDs to AppleScript's text item delimiters
  set AppleScript's text item delimiters to the search_string
  set the item_list to every text item of this_text
  set AppleScript's text item delimiters to the replacement_string
  set this_text to the item_list as string
  set AppleScript's text item delimiters to prevTIDs
  return this_text
end replace_text

on run
  set canvasNames to {"Flux", "Mono", "foobar", "firstEmitting", "concat", "concatWithValues", "concat1", "delayUntilOther", "delayUntil", "untilOther", "first", "generate foreach", "empty", "error", "flatmap", "flatmap.1", "then", "fromArray", "from", "next", "concat inner", "from.1", "fromIterable 2", "just.n", "just", "fromIterable 3", "or", "interval", "delay", "log.1", "log", "never", "mapSignal", "merge", "mergeOrdered", "merge inner", "zip", "combineLatest", "zip1", "zipDelayError1", "when", "zipTuple", "zipTuple1", "zipTupleDelayError1", "and", "when.t", "whenDelayError", "otherwise", "otherwise 2", "mapError", "onErrorResume", "then 1", "thenEmpty", "ignoreElements", "ignoreElement", "then.1", "concatMap", "switchOnError", "doOnNext", "doOnRequest", "doOnRequest.1", "doOnSuccess", "defaultIfEmpty", "doOnCancel", "publishOn 1", "publishOn.1 1", "doOnError", "doOnSubscribe", "doOnError1", "doOnComplete", "doOnTerminate", "doOnTerminate.1", "doAfterTerminate.1", "doAfterTerminate", "flatmap.s", "flatmap.s.1", "lift", "lift.1", "map.1", "map", "subscribeOn", "publishOn.1", "onErrorResumeWith 3", "otherwisejust", "switchifempty", "otherwiseIfEmpty", "toIterable", "toIterable.N", "unbounded.1", "merge.1", "fromCallable", "fromCallableEmpty", "fromSupplier", "fromRunnable", "then.n", "filter", "filter.1", "then.s.1", "block", "topic", "workqueue", "emitter", "workqueue.f", "replay", "topic.share", "defer.1", "old org", "org", "spheres", "defer", "error.request", "fromFuture", "range", "switchOnNext", "using", "all", "buffer", "buffer.size 2", "collectList", "thenMany", "thenReturn", "buffer.boundary", "buffer.sizeskipover", "buffer.sizeskip", "buffer.openclose", "buffer.openclose.over", "buffer.timespan", "buffer.timeshift", "buffer.timeshift.over", "buffer.timespan.max", "cache", "bufferSort", "cast", "cast.1", "collect", "log 2", "subscribe", "subscribe.1", "subscribe.error", "subscribe.error.1", "subscribe.complete", "subscribe.cmplete.1", "count", "delaySubscription", "delaySubscription.1", "delaySubscriptionPub", "delaySubscriptionPub.1", "dematerialize", "dematerialize.1", "materialize", "materialize.1", "distinct", "distinctkey", "distinctUntilChanged", "distinctUntilChanged 2", "doOnError .when", "doOnValueError .when 2", "elapsed", "elapsed.1", "elementAt", "elementAt 2", "every", "every.first", "elementAt 3", "interval d", "flatmap requests", "mergeSequential", "flatmapSequential", "groupby 2", "hasElements", "hasElement", "last", "publish", "replay 1", "process", "nest", "nest.1", "process processor", "onBackpressureBlock", "onBackpressureBuffer", "onBackpressureDrop", "onBackpressureDrop 2", "onBackpressureLatest", "onBackpressureError", "MonoProcessor", "partition", "reduce", "aggregate", "repeat", "repeatn 2", "repeatboolean", "repeatnboolean", "repeatWhen", "unbounded", "retry", "retry.1", "retryn", "retryn.1", "retryboolean", "retryboolean.", "retrynb", "retrynb.1", "retryWhen", "retryWhen.1", "requestWhen", "throttleRequest", "sample.timespan", "sample", "throttleLast", "sampleFirst", "sampleTimeout 2", "throttleFirst", "throttleTimeout", "sampleTimeout", "sampleTimeoutParallel", "scan", "accumulate", "singleOrDefault", "single", "singleOrEmpty", "skip", "skip.timespan", "skipLast", "skipUntil", "skipWhile", "startWith", "startWithv", "startWithi", "switchMap", "take", "takeZero", "take.time", "takeLast", "takeUntil", "takeUntilp", "takeWhile", "tap", "timestamp", "timestamp.1", "timeout.time", "timeout.time.1", "timeout.time.fallback", "timeout.time.fallback.1", "timeout.time.fallback 2", "timeout.p.1", "timeout.all", "timeout.all.fallback", "timeout.all.fallback.1", "timeout.all.1", "collectMap", "collectSortedlist", "collectMultimap", "window.boundary", "window.skip.over", "window.skip", "window.openclose", "window.openclose.over", "join", "groupJoin", "window.timespan", "window.timeshift", "window.timeover", "window.size", "window.until.cutBefore", "window.until.cutAfter", "window.until", "window.while", "window.sizeortime", "withLatestFrom", "zipWithIt", "zipArray", "delay next", "broadcaster", "stream", "fromFuture 1", "toFuture", "fromStream", "justOrEmpty", "zipPrefetch", "composition", "composition 6", "composition 7", "composition 2", "composition 3", "composition 4", "repeatWhen.1", "monoProcessor", "cache 3", "when 2", "windowcancel", "join 1", "groupjoin", "delayUntil 2"}
  repeat with canvasName in canvasNames
    convertGraffleFile(canvasName, replace_text(replace_text(replace_text(canvasName, " ", "."), "..", "."), ".", "-") & ".svg")
  end repeat
end run
